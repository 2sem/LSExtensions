//
//  Double+.swift
//  pallyconswiftdemo
//
//  Created by 영준 이 on 2018. 6. 25..
//  Copyright © 2018년 leesam. All rights reserved.
//

import Foundation
import AVFoundation

extension Double{
    /**
         Returns string with the date generated this value as Seconds
         - Parameters:
             - format: String format to print date as String
             - locale: Locale to use date formmating
     */
    public func dateString(_ format : String = "HH:mm:ss", locale: Locale) -> String{
        var value = "";
        
        let date = Date(timeIntervalSince1970: self);
        let formatter = DateFormatter();
        formatter.timeZone = TimeZone(identifier: "UTC");
        formatter.dateFormat = format;
        formatter.locale = locale;
        
        value = formatter.string(from: date);
        
        return value;
    }
    
    /**
         Returns string generated by given format with this time
         - Parameters:
             - format: Time format
             - withoutZeroHour: Whether to print hour if it is zero(value is less than 3600s)
             - formatForZeroHour: Date format to use when the hour is zero
     */
    public func dateString(_ format : String = "HH:mm:ss", withoutZeroHour : Bool = false, formatForZeroHour : String = "mm:ss") -> String{
        guard self >= 60 * 60 else{
            return self.dateString(formatForZeroHour);
        }
        
        return self.dateString(format);
    }
    
    /**
        Generate CMTime with this
        - parameter timescale : timescale to use for making
    */
    public func time(_ timescale : CMTimeScale = 600) -> CMTime{
        return CMTimeMakeWithSeconds(self, preferredTimescale: timescale);
    }
    
    /**
        Returns whether this double value in range of Int64
     */
    public func isInInt64() -> Bool{
        let maxInt = Double(Int64.max).nextDown;
        let minInt = Double(Int64.min).nextUp;
        
        return minInt <= self && self <= maxInt;
    }
}
